{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","services/ApiService.js","components/ImageGallery/ImageGallery.js","services/SmoothScroll.js","App.js","index.js"],"names":["Searchbar","handleQueryChange","e","setState","query","currentTarget","value","toLowerCase","onHandleSubmit","preventDefault","state","trim","props","submit","alert","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","React","Component","ImageGalleryItem","id","alt","webformatURL","largeImageURL","click","src","onClick","Button","btnName","Loader","size","Modal","keydownHandler","code","close","onBackdropCloseClick","target","window","addEventListener","removeEventListener","fetchImages","page","URL","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","loadMoreHandler","gallery","prevState","hits","scrollTo","top","document","documentElement","scrollHeight","behavior","openModalHandler","dataset","source","closeModalHandler","status","prevProps","total","error","catch","map","item","tags","App","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df2c9faa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Searchbar extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      query: \"\",\r\n    };\r\n  }\r\n\r\n  handleQueryChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.query.trim() === \"\") {\r\n      alert(\"No query entered\");\r\n      return;\r\n    }\r\n\r\n    this.props.submit(this.state.query);\r\n    this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.onHandleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleQueryChange}\r\n            value={this.state.query}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Searchbar };\r\n","function ImageGalleryItem({ id, alt, webformatURL, largeImageURL, click }) {\r\n  return (\r\n    <li key={id} className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={alt}\r\n        data-source={largeImageURL}\r\n        onClick={click}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport { ImageGalleryItem };\r\n","function Button({ btnName, className, onClick }) {\r\n  return (\r\n    <button type=\"submit\" className={className} onClick={onClick}>\r\n      {btnName}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport { Button };\r\n","import { ImSpinner } from \"react-icons/im\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"spinContainer\">\r\n      <ImSpinner className=\"Spinner\" size=\"80\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Loader };\r\n","import React from \"react\";\r\n\r\nclass Modal extends React.Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.keydownHandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.keydownHandler);\r\n  }\r\n\r\n  keydownHandler = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.close();\r\n    }\r\n  };\r\n\r\n  onBackdropCloseClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.close();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.onBackdropCloseClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt={this.props.alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Modal };\r\n","export default function fetchImages(query, page) {\r\n  const KEY = \"22456437-7bc40aa948e36a9aa215a1147\";\r\n  const URL = `https://pixabay.com/api/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n  return fetch(URL).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(\"Something gone wrong\"));\r\n  });\r\n}\r\n","import React from \"react\";\r\n\r\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport { Button } from \"../Button/Button\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { Modal } from \"../Modal/Modal\";\r\n\r\nimport fetchImages from \"../../services/ApiService\";\r\nimport smoothScroll from \"../../services/SmoothScroll\";\r\n\r\nclass ImageGallery extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      status: \"idle\",\r\n      page: 1,\r\n      gallery: null,\r\n      // error: null,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.query !== this.props.query) {\r\n      this.setState({ status: \"pending\" });\r\n\r\n      fetchImages(this.props.query)\r\n        .then((gallery) => {\r\n          if (gallery.total === 0) {\r\n            return this.setState({\r\n              error: \"Image(s) not found\",\r\n              status: \"rejected\",\r\n            });\r\n          }\r\n          return this.setState({\r\n            gallery: gallery.hits,\r\n            status: \"resolved\",\r\n            page: 1,\r\n          });\r\n        })\r\n        .catch((error) => this.setState({ error, status: \"rejected\" }));\r\n    }\r\n  }\r\n\r\n  loadMoreHandler = (e) => {\r\n    fetchImages(this.props.query, this.state.page + 1)\r\n      .then((gallery) =>\r\n        this.setState((prevState) => ({\r\n          gallery: [...prevState.gallery, ...gallery.hits],\r\n          page: prevState.page + 1,\r\n        }))\r\n      )\r\n      .then(() => smoothScroll());\r\n  };\r\n\r\n  openModalHandler = (e) => {\r\n    this.setState({\r\n      largeImageURL: e.target.dataset.source,\r\n      alt: e.target.alt,\r\n    });\r\n  };\r\n\r\n  closeModalHandler = () => {\r\n    this.setState({\r\n      largeImageURL: \"\",\r\n      alt: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.status === \"idle\") {\r\n      return <Button className={\"Hidden\"} />;\r\n    }\r\n\r\n    if (this.state.status === \"pending\") {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (this.state.status === \"rejected\") {\r\n      return <p>{this.state.error}</p>;\r\n    }\r\n\r\n    if (this.state.status === \"resolved\") {\r\n      return (\r\n        <div className=\"GalleryContainer\">\r\n          <ul className=\"ImageGallery\">\r\n            {this.state.gallery.map((item) => (\r\n              <ImageGalleryItem\r\n                key={item.id}\r\n                alt={item.tags}\r\n                webformatURL={item.webformatURL}\r\n                largeImageURL={item.largeImageURL}\r\n                click={this.openModalHandler}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <div className=\"BtnContainer\">\r\n            <Button\r\n              className={\"Button\"}\r\n              btnName={\"Load more\"}\r\n              onClick={this.loadMoreHandler}\r\n            />\r\n          </div>\r\n          {this.state.largeImageURL && (\r\n            <Modal\r\n              close={this.closeModalHandler}\r\n              largeImageURL={this.state.largeImageURL}\r\n              alt={this.state.alt}\r\n            />\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport { ImageGallery };\r\n","export default function smoothScroll() {\r\n  return window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n}\r\n","import React from \"react\";\n\nimport { Searchbar } from \"./components/Searchbar/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: \"\",\n    };\n  }\n\n  handleFormSubmit = (query) => {\n    this.setState({ query });\n  };\n\n  render() {\n    return (\n      <div>\n        <Searchbar submit={this.handleFormSubmit} />\n        <ImageGallery query={this.state.query} />\n      </div>\n    );\n  }\n}\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}